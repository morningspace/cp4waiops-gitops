---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cp4waiops-patch
  annotations:
    argocd.argoproj.io/sync-wave: "130"
  namespace: {{.Values.spec.cp4waiops_namespace}}
spec:
  schedule: "*/10 * * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: openshift-argocd-admin
          restartPolicy: OnFailure
          containers:
          - name: config
            image: quay.io/openshift/origin-cli:latest
            imagePullPolicy: IfNotPresent
            resources:
              requests:
                memory: "64Mi"
                cpu: "100m"
              limits:
                memory: "128Mi"
                cpu: "250m"
            command:
              - /bin/sh
              - -c
              - |
                set -x

                patched=""
                ns="{{.Values.spec.cp4waiops_namespace}}"
                res=$(oc get aiopsanalyticsorchestrator aiops -n $ns -o jsonpath={.spec.pullSecrets})
                if [[ -n $res ]]; then
                  if echo $res | grep -q ibm-entitlement-key; then
                    echo "Image pull secret has been patched to aiopsanalyticsorchestrator/aiops..."
                  else
                    oc patch aiopsanalyticsorchestrator aiops -n $ns --type=merge -p '{"spec": {"pullSecrets": ["ibm-entitlement-key"]}}'
                    patched=1
                  fi
                fi

                res=$(oc get sa aiops-topology-service-account -n $ns -o jsonpath={.imagePullSecrets})
                if [[ -n $res ]]; then
                  if echo $res | grep -q ibm-entitlement-key; then
                    echo "Image pull secret has been patched to sa/aiops-topology-service-account..."
                  else
                    oc patch sa aiops-topology-service-account -n $ns --type=merge -p '{"metadata": {"labels": {"managedByUser": "true"}}, "imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
                    patched=1
                  fi
                fi

                if [[ -n $patched ]]; then
                  res=$(oc get pod -n $ns | grep aiops-topology-cassandra-auth-secret-generator | awk '{print $1}')
                  if [[ -n $res ]]; then
                    oc delete pod $res -n $ns
                  fi

                  res=$(oc get pod -n $ns | grep aiops-ir-analytics | awk '{print $1}')
                  if [[ -n $res ]]; then
                    oc delete pod $res -n $ns
                  fi
                fi
